name: API Image build

on:
  push:
    branches:
      - feature/terraform

env:
  TF_CLOUD_ORGANIZATION: "yosupo06-org"
  TF_WORKSPACE: "dev-library-checker"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
    - uses: actions/checkout@v4

    - uses: hashicorp/setup-terraform@v3
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    - run: terraform init
      working-directory: ./terraform
    - id: tf-output
      run: terraform output --json
      working-directory: ./terraform

    - id: auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ fromJson(steps.tf-output.outputs.stdout).gh_provider_id.value }}
        service_account: ${{ fromJson(steps.tf-output.outputs.stdout).api_deployer_sa_email.value }}
        token_format: access_token
    
    - uses: docker/login-action@v3
      with:
        # TODO: stop to use magic constant
        registry: asia-northeast1-docker.pkg.dev
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    - run: ./api/gen_protoc.sh

    - uses: docker/metadata-action@v4
      id: meta
      with:
        images: ${{ fromJson(steps.tf-output.outputs.stdout).api_image.value }}
        tags: |
          type=schedule,pattern={{date 'YYYYMMDD-hhmmss'}}

    - uses: docker/build-push-action@v5
      id: build
      with:
        context: .
        push: true
        file: Dockerfile.API
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Deploy api service to Cloud Run
      run: >
        gcloud run deploy api
        --region=asia-northeast1
        --image=${{ fromJson(steps.tf-output.outputs.stdout).api_image.value }}@${{ steps.build.outputs.digest }}
