name: Judge Image Build

on:
  workflow_call:
    inputs:
      env:
        type: string
        required: true
      build-base:
        type: boolean
        default: true

concurrency:
  group: ${{ inputs.env }}-judge-image-build
  cancel-in-progress: false

env:
  TF_CLOUD_ORGANIZATION: "yosupo06-org"
  TF_WORKSPACE: "${{ inputs.env }}-library-checker"  
  
jobs:
  base:
    if: ${{ inputs.build-base }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
    - uses: actions/checkout@v4

    - uses: hashicorp/setup-terraform@v3
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    - run: terraform init
      working-directory: ./terraform
    - id: tf-output
      run: terraform output --json
      working-directory: ./terraform

    - uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ fromJson(steps.tf-output.outputs.stdout).gh_provider_id.value }}
        service_account: ${{ fromJson(steps.tf-output.outputs.stdout).judge_deployer_sa_email.value }}
        token_format: access_token

    - uses: google-github-actions/setup-gcloud@v2
    
    - run: packer init build.pkr.hcl
      working-directory: ./packer/base
    - id: image-name
      run: echo "name=v3-tmp-base-image-$(date +'%Y-%m-%d-%H-%M-%S')" >> $GITHUB_OUTPUT
    - name: Build image
      run: packer build -var 'env=${{ inputs.env }}' -var 'image_name=${{ steps.image-name.outputs.name }}' .
      working-directory: ./packer/base
    # TODO: test
    - name: Deploy image
      run: >
        gcloud compute images create v3-${{ inputs.env }}-base-image-$(date +'%Y-%m-%d-%H-%M-%S')
        --source-image ${{ steps.image-name.outputs.name }}
        --family v3-${{ inputs.env }}-base-image

  judge:
    if: ${{ !cancelled() && !failure() }}
    needs: [base]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
    - uses: actions/checkout@v4

    - uses: hashicorp/setup-terraform@v3
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    - run: terraform init
      working-directory: ./terraform
    - id: tf-output
      run: terraform output --json
      working-directory: ./terraform

    - uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ fromJson(steps.tf-output.outputs.stdout).gh_provider_id.value }}
        service_account: ${{ fromJson(steps.tf-output.outputs.stdout).judge_deployer_sa_email.value }}
        token_format: access_token

    - id: secrets
      uses: google-github-actions/get-secretmanager-secrets@v1
      with:
        secrets: |-
          minio-secret:${{ inputs.env }}-library-checker-project/storage-hmac-key/latest

    - uses: google-github-actions/setup-gcloud@v2
    
    - run: ./api/gen_protoc.sh
    - run: go build .
      working-directory: ./judge

    - run: packer init build.pkr.hcl
      working-directory: ./packer/judge
    - name: Build image
      run: >
        packer build
        -var 'env=${{ inputs.env }}'
        -var 'image_family=${{ fromJson(steps.tf-output.outputs.stdout).judge_image_family.value }}'
        -var 'minio_host=storage.googleapis.com'
        -var 'minio_id=${{ fromJson(steps.tf-output.outputs.stdout).storage_hmac_id.value }}'
        -var 'minio_key=${{ steps.secrets.outputs.minio-secret }}'
        -var 'minio_bucket=${{ fromJson(steps.tf-output.outputs.stdout).private_bucket_name.value }}'
        -var 'minio_public_bucket=${{ fromJson(steps.tf-output.outputs.stdout).public_bucket_name.value }}'
        -var 'db_connection_name=${{ fromJson(steps.tf-output.outputs.stdout).main_db_connection_name.value }}'
        -var 'pg_user=${{ fromJson(steps.tf-output.outputs.stdout).judge_sa_db_name.value }}'
        .
      working-directory: ./packer/judge
