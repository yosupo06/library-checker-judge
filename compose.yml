services:
  api:
    build:
      dockerfile: Dockerfile.API
    ports:
      - 12380:12380
    depends_on:
      db-init:
        condition: service_completed_successfully
      gcs:
        condition: service_healthy
    environment:
      - API_DB_LOG=true
      - PGHOST=db
      - FIREBASE_AUTH_EMULATOR_HOST=firebase:9099
      - STORAGE_PRIVATE_BUCKET=testcase
      - STORAGE_PUBLIC_BUCKET=testcase-public
      - STORAGE_EMULATOR_HOST=http://gcs:4443
      - STORAGE_PROJECT_ID=dev-library-checker-project
    healthcheck:
        test: wget -q -O - localhost:12380/health || exit 1
        timeout: 10s
        interval: 1s
        retries: 30

  api-rest:
    build:
      dockerfile: Dockerfile.APIREST
    ports:
      - 12381:12381
    depends_on:
      db-init:
        condition: service_completed_successfully
      gcs:
        condition: service_healthy
    environment:
      - API_DB_LOG=true
      - PGHOST=db
      - FIREBASE_PROJECT=dev-library-checker-project
      - FIREBASE_AUTH_EMULATOR_HOST=firebase:9099
      - STORAGE_PRIVATE_BUCKET=testcase
      - STORAGE_PUBLIC_BUCKET=testcase-public
      - STORAGE_EMULATOR_HOST=http://gcs:4443
      - STORAGE_PROJECT_ID=dev-library-checker-project
    healthcheck:
      test: wget -q -O - localhost:12381/health || exit 1
      timeout: 10s
      interval: 1s
      retries: 30

  db:
    image: postgres:11.3
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=librarychecker
      - POSTGRES_PASSWORD=lcdummypassword
    healthcheck:
        test: [ "CMD", "pg_isready", "-q", "-d", "librarychecker", "-U", "postgres" ]
        timeout: 10s
        interval: 1s
        retries: 30
  db-init:
    build:
      dockerfile: Dockerfile.MIGRATOR
    depends_on:
      db:
        condition: service_healthy
    environment:
      - PGHOST=db
  gcs:
    image: fsouza/fake-gcs-server:latest
    command:
      - -scheme
      - http
      - -host
      - 0.0.0.0
      - -port
      - "4443"
      - -external-url
      - http://gcs:4443
    ports:
      - 4443:4443
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:4443/storage/v1/b >/dev/null 2>&1"]
      interval: 1s
      timeout: 1s
      retries: 10
  firebase:
    build:
      dockerfile: firebase/Dockerfile
    ports:
      - 4000:4000
      - 9099:9099
      - 8085:8085
    volumes:
      - ./firebase/firebase.json:/opt/firebase/firebase.json
    working_dir: /opt/firebase
    command: firebase emulators:start --project dev-library-checker-project
    tty: true

  # Judge worker: polls DB tasks and runs Docker containers for submissions
  judge:
    build:
      dockerfile: Dockerfile.JUDGE
    environment:
      - PGHOST=db
      - PGPORT=5432
      - PGDATABASE=librarychecker
      - PGUSER=postgres
      - PGPASSWORD=lcdummypassword
      - STORAGE_PRIVATE_BUCKET=testcase
      - STORAGE_PUBLIC_BUCKET=testcase-public
      - STORAGE_EMULATOR_HOST=http://gcs:4443
      - STORAGE_PROJECT_ID=dev-library-checker-project
      - LIBRARY_CHECKER_JUDGE=1
      # Uncomment and set if you need a specific cgroup parent
      # - CGROUP_PARENT=system.slice
    # Needs access to host Docker daemon and cgroup FS for resource metrics
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      # Ensure host and container share the same temp directory so bind mounts work
      - /tmp:/tmp
    depends_on:
      db:
        condition: service_healthy
      gcs:
        condition: service_healthy
      api:
        condition: service_healthy
      api-rest:
        condition: service_healthy
    restart: unless-stopped
